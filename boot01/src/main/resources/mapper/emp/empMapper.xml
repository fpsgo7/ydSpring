<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.emp.mapper.EmpMapper">
	<!-- 전체 조회 -->
	<select id="selectEmpAllList" resultType="EmpVO">
		SELECT employee_id
	        ,first_name
	        ,last_name
	        ,email
	        ,phone_number
	        ,hire_date
	        ,job_id
	        ,salary
	        ,commission_pct
	        ,manager_id
	        department_id
		FROM employees
		<where>
			<if test="lastName != null and !lastName.equals('')">
				last_name =  #{lastName}
			</if>
			<!-- where을 태그화 시켰을경우
			 and 와 or은  필요에 따라 자동으로 사라지기도한다. -->
			<if test="departmentId > 0">
				and department_id = #{departmentId}
			</if>
		</where>
		ORDER BY employee_id
	</select>
	
	<!-- 단건조회 -->
	<select id="selectEmpInfo" resultType="EmpVO">
		SELECT employee_id
		        ,first_name
		        ,last_name
		        ,email
		        ,phone_number
		        ,hire_date
		        ,job_id
		        ,salary
		        ,commission_pct
		        ,manager_id
		        ,department_id
		FROM employees
		<!-- #{}  안에는 EmpVO 을 기반으로 변수입름을 입력한다.-->
		WHERE employee_id = #{employeeId}
		<!--  #{} : 데이터 타입에 따른 추가작업
			${} : 데이터 타입과 무관하게 '' 없이 진행 -->
	</select>
	<!-- 등록 -->
	<insert id="insertEmpInfo" parameterType="EmpVO">
		<!-- SELECT 문 따로 INSERT 문 따로 하면 중간에 데이터 변동에대한
		대비를 할 수 없어 같이 실행하기 위해 SELECTKEY를 사용한다. -->
		<!-- keyProperty : 파라미터타입에서 넣고자하는 필드 
			resultType :  타입지정
			order: 앞에서 실행 -->
		<selectKey keyProperty="employeeId" resultType="Integer" order="BEFORE">
			SELECT NVL( MAX(employee_id) ,100) +1
			FROM employees
		</selectKey>
		INSERT INTO employees (employee_id
		     ,last_name
		     ,email
		     ,hire_date
		     ,job_id
		     <!-- 콤마를 앞에 두는 이유는 해당 문장이
		     사라질때 쓸모없어진 콤마도 같이 없에서 문장상 오류를
		     없에기 위해서이다. -->
		     <if test="salary > 0">
		     	,salary     
		     </if>
			)
		VALUES ( #{employeeId}
		    ,#{lastName}
		    ,#{email}
		    <choose>
		    	<when test="hireDate != null"> 
		    		,#{hireDate}
		    	</when>
		    	<otherwise>
		    		, sysdate
		    	</otherwise>
		    </choose>
		    ,#{jobId}
		    <if test="salary > 0">
		    ,#{salary}
		    </if>
		    )
	</insert>
	<!-- 수정 -->
	<!-- 매개변수가 2개이상일경우 parameterType을 생략하여도된다. -->
	<update id="updateEmpInfo" >
		UPDATE employees
		SET
			last_name = #{emp.lastName}
			<if test="emp.email != null and !emp.email.equals('')">
				, email = #{emp.email}
			</if>
			<if test="emp.jobId != null and !emp.jobId.equals('')">
				, job_id = #{emp.jobId}
			</if>
			<if test="emp.hireDate != null">
				, hire_date = #{emp.hireDate}
			</if>
		WHERE employee_id = #{eid}
	</update>
	<!-- 삭제 -->
	<!-- 기본타입에서는 파라미터타입을 생략하여도되지만 doble 같은경우 적어줘도 좋을 수 있다. -->
	<delete id="deleteEmpInfo" parameterType="int">
		DELETE FROM employees
		<!-- 단일 값일때는 #{}안의 이름은 딱히 상광없다. -->
		WHERE employee_id = #{id}
	</delete>
</mapper>